name: Splatoon3 Splatnet3 Backup

on:
  schedule:
    - cron: '0 5,9,15,21 * * *'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      API_KEY: ${{ secrets.API_KEY }}
      ACC_LOC: ${{ secrets.ACC_LOC }}
      GTOKEN: ${{ secrets.GTOKEN }}
      BULLETTOKEN: ${{ secrets.BULLETTOKEN }}
      SESSION_TOKEN: ${{ secrets.SESSION_TOKEN }}
      F_GEN: ${{ secrets.F_GEN }}

    name: Splatoon3 Splatnet3 Backup

    steps:
      - name: Set up Python 3.11 # Pythonのセットアップ
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
          
      # リポジトリからチェックアウト
      - name: Checkout 
        uses: actions/checkout@v3

      - name: Checkout frozenpandaman/s3s # s3sをチェックアウト
        uses: actions/checkout@v3
        with:
          repository: 'frozenpandaman/s3s'
          path: s3s

      - name: Generate config.txt # config.txtの作成
        working-directory: s3s
        run: |
          echo '{"api_key": "${{ env.API_KEY }}", "acc_loc": "${{ env.ACC_LOC }}", "gtoken": "${{ env.GTOKEN }}", "bullettoken": "${{ env.BULLETTOKEN }}", "session_token": "${{ env.SESSION_TOKEN }}", "f_gen": "${{ env.F_GEN }}" }' > config.txt
          cat config.txt

      - name: Install s3s requirements # s3sのパッケージリストを取得
        working-directory: s3s
        run: |
          pip install -r requirements.txt

      - name: Run s3s # s3sを実行しバックアップファイルを取得
        working-directory: s3s
        run: |
          python3 s3s.py -o
        
      # バックアップファイル名のマスク
      - name: Mask filename
        working-directory: s3s
        run: |
          for FILE_NAME in `ls -1 ${{ github.workspace }}/s3s/exports/results/*.json | \
            sed s@${{ github.workspace }}/s3s/exports/results/@@g`; do
              echo "::add-mask::$FILE_NAME"
          done
          for FILE_NAME in `ls -1 ${{ github.workspace }}/s3s/exports/coop_results/*.json | \
            sed s@${{ github.workspace }}/s3s/exports/coop_results/@@g`; do
              echo "::add-mask::$FILE_NAME"
          done
          
      # バトルのリザルトをフォルダ分けする
      - name: Move VSFile
        run: |
          python3 moveVsFile.py ${{ github.workspace }}/s3s/exports/results

      # Dropboxのアクセストークンを取得
      - id: get-token
        name: Get dropbox token
        run: |
          secret_handle=$((RANDOM))
          echo "::add-mask::$secret_handle"
          secret_handle=$( \
            curl -s https://api.dropbox.com/oauth2/token \
              -d grant_type=refresh_token -d refresh_token=${{ secrets.dropbox_refresh_token }} \
              -u ${{ secrets.dropbox_app_key }}:${{ secrets.dropbox_app_secret }} \
              | jq -r ".access_token")
          echo "token=$secret_handle" >> "$GITHUB_OUTPUT"
           
      # バトルのリザルトをDropboxへ送信
      - name: Upload battle-result to dropbox
        run: |
          for VSMODE in vs_regular vs_bankara vs_xmatch vs_event vs_private; do
              
              if [ -d ${{ github.workspace }}/s3s/exports/results/$VSMODE ]; then
                  echo $VSMODE
                  ls -F ${{ github.workspace }}/s3s/exports/results/$VSMODE | grep -v / | wc -l
                  flg=$(echo false)
                  if [ `ls -F ${{ github.workspace }}/s3s/exports/results/$VSMODE | grep -v / | wc -l` < "50" ] ; then
                      echo under50
                      flg=$(echo true)
                  fi
                  for FILE_NAME in `ls -1 ${{ github.workspace }}/s3s/exports/results/$VSMODE/*.json | \
                    sed s@${{ github.workspace }}/s3s/exports/results/$VSMODE/@@g`; do
                      if [ $flg == true ] ; then
                          curl -o /dev/null -s -X POST https://content.dropboxapi.com/2/files/upload \
                            --header "Authorization: Bearer ${{ steps.get-token.outputs.token }}" \
                            --header "Dropbox-API-Arg: {\"path\": \"/Splatoon3/results/$VSMODE/$FILE_NAME\",\"mode\": \"overwrite\",\"mute\": false}" \
                            --header "Content-Type: application/octet-stream" \
                            --data @${{ github.workspace }}/s3s/exports/results/$VSMODE/$FILE_NAME
                      fi
                      flg=$(echo true)
                  done
              fi
          done

      # バイトのリザルトをDropboxへ送信
      - name: Upload coop-result to dropbox
        run: |
          flg=$(echo false)
          if [ `ls -F ${{ github.workspace }}/s3s/exports/results/$VSMODE | grep -v / | wc -l` < 50 ] ; then
              flg=$(echo true)
          fi
          for FILE_NAME in `ls -1 ${{ github.workspace }}/s3s/exports/coop_results/*.json | \
            sed s@${{ github.workspace }}/s3s/exports/coop_results/@@g`; do
              if [ $flg == true ] ; then
                  curl -o /dev/null -s -X POST https://content.dropboxapi.com/2/files/upload \
                    --header "Authorization: Bearer ${{ steps.get-token.outputs.token }}" \
                    --header "Dropbox-API-Arg: {\"path\": \"/Splatoon3/coop_results/$FILE_NAME\",\"mode\": \"overwrite\",\"mute\": false}" \
                    --header "Content-Type: application/octet-stream" \
                    --data @${{ github.workspace }}/s3s/exports/coop_results/$FILE_NAME
              fi
              flg=$(echo true)
          done
