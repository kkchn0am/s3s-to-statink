name: Splatoon3 Splatnet3 Backup

on:
#  schedule:
#    - cron: '0 0-23/2 * * *'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      API_KEY: ${{ secrets.API_KEY }}
      ACC_LOC: ${{ secrets.ACC_LOC }}
      GTOKEN: ${{ secrets.GTOKEN }}
      BULLETTOKEN: ${{ secrets.BULLETTOKEN }}
      SESSION_TOKEN: ${{ secrets.SESSION_TOKEN }}
      F_GEN: ${{ secrets.F_GEN }}

    name: Splatoon3 Splatnet3 Backup

    permissions:  # ログファイル修正のため権限を設定
        contents: write

    steps:
      - name: Set up Python 3.11 # Pythonのセットアップ
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      #- name: Checkout frozenpandaman/s3s # s3sをチェックアウト
      #  uses: actions/checkout@v3
      #  with:
      #    repository: 'frozenpandaman/s3s'
      #    path: s3s

      #- name: Generate config.txt # config.txtの作成
      #  working-directory: s3s
      #  run: |
      #    echo '{"api_key": "${{ env.API_KEY }}", "acc_loc": "${{ env.ACC_LOC }}", "gtoken": "${{ env.GTOKEN }}", "bullettoken": "${{ env.BULLETTOKEN }}", "session_token": "${{ env.SESSION_TOKEN }}", "f_gen": "${{ env.F_GEN }}" }' > config.txt
      #    cat config.txt

      #- name: Install s3s requirements # s3sのパッケージリストを取得
      #  working-directory: s3s
      #  run: |
      #    pip install -r requirements.txt

      #- name: Run s3s # s3sの実行
      #  working-directory: s3s
      #  run: |
      #    python3 s3s.py -o


      # 成果物アップロード
      #- name: artifact upload
      #  uses: actions/upload-artifact@v2.2.0
      #  with:
      #    # 保存ファイル名（name.zip）
      #    name: coop_results
      #    # 保存するファイル
      #    path: s3s/exports/coop_results
      
      - name: Checkout # リポジトリからチェックアウト
        uses: actions/checkout@v3

      - name: Update LogFile # ログファイルに日付時刻を出力
        env:
          TZ: 'Asia/Tokyo'
        run: |
          echo $(date +'%Y-%m-%d %H:%M:%S') > ${{ github.workspace }}/log.txt
          echo $(date +'%Y-%m-%d %H:%M:%S') > ${{ github.workspace }}/log2.txt
          echo $(date +'%Y-%m-%d %H:%M:%S') > ${{ github.workspace }}/log3.txt

#      - name: Commit and Push # ログファイルをプッシュしてリポジトリに反映
#        run: |
#          git config --global user.email "ruzoho606@sofia.re"
#          git config --global user.name "kkchn0am"
#          git add .
#          git commit -m "Update product information"
#          git config pull.rebase false
#          git pull
#          git push origin main

      - name: Run ls # 
        run: |
          pwd
          ls -1 /home/runner/work/s3s-to-statink/s3s-to-statink/*.txt

      - id: get-token
        name: get dropbox token
        run: |
          secret_handle=$((RANDOM))
          echo "::add-mask::$secret_handle"
          secret_handle=$( \
            curl -s https://api.dropbox.com/oauth2/token \
              -d grant_type=refresh_token -d refresh_token=${{ secrets.dropbox_refresh_token }} \
              -u ${{ secrets.dropbox_app_key }}:${{ secrets.dropbox_app_secret }} \
                | jq -r ".access_token")
          echo "token=$secret_handle" >> "$GITHUB_OUTPUT"
           
#      - name: filename masking
#        run: |
#          for FILE_NAME in `ls -1 ${{ github.workspace }}/*.txt`; do
#            echo "::add-mask::$FILE_NAME"
#          done

      - name: upload to dropbox
        run: |
          set -eux
          for FILE_NAME in `ls -1 ${{ github.workspace }}/*.txt`; do
            echo $FILE_NAME
            curl -X POST https://content.dropboxapi.com/2/files/upload \
              --header "Authorization: Bearer ${{ steps.get-token.outputs.token }}" \
              --header "Dropbox-API-Arg: {\"path\": \"/Splatoon3/coop_results/$FILE_NAME\",\"mode\": \"overwrite\",\"mute\": false}" \
              --header "Content-Type: application/octet-stream" \
              --data-binary @$FILE_NAME
          done

      # bash ./deploy.sh coop_results $FILE_NAME
      #- name: upload to dropbox
      #  run: bash ./deploy.sh
      #  env:
      #    DROPBOX_TOKEN: ${{ secrets.dropbox_token }}
      #    UPLOAD_FILE: 'log.txt'
